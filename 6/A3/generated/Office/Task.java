//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `office.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Office;

public class Task extends com.zeroc.Ice.Value
{
    public Task()
    {
        this.taskType = TaskType.RECEIVENEWID;
        this.status = Status.RECEIVED;
    }

    public Task(TaskType taskType, long id, Status status)
    {
        this.taskType = taskType;
        this.id = id;
        this.status = status;
    }

    public Task(TaskType taskType, long id, int time, Status status)
    {
        this.taskType = taskType;
        this.id = id;
        setTime(time);
        this.status = status;
    }

    public TaskType taskType;

    public long id;

    private int time;
    private boolean _time;

    public int getTime()
    {
        if(!_time)
        {
            throw new java.util.NoSuchElementException("time is not set");
        }
        return time;
    }

    public void setTime(int time)
    {
        _time = true;
        this.time = time;
    }

    public boolean hasTime()
    {
        return _time;
    }

    public void clearTime()
    {
        _time = false;
    }

    public void optionalTime(java.util.OptionalInt v)
    {
        if(v == null || !v.isPresent())
        {
            _time = false;
        }
        else
        {
            _time = true;
            time = v.getAsInt();
        }
    }

    public java.util.OptionalInt optionalTime()
    {
        if(_time)
        {
            return java.util.OptionalInt.of(time);
        }
        else
        {
            return java.util.OptionalInt.empty();
        }
    }

    public Status status;

    public Task clone()
    {
        return (Task)super.clone();
    }

    public static String ice_staticId()
    {
        return "::Office::Task";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = -6438035344743129147L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        TaskType.ice_write(ostr_, taskType);
        ostr_.writeLong(id);
        Status.ice_write(ostr_, status);
        if(_time)
        {
            ostr_.writeInt(1, time);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        taskType = TaskType.ice_read(istr_);
        id = istr_.readLong();
        status = Status.ice_read(istr_);
        if(_time = istr_.readOptional(1, com.zeroc.Ice.OptionalFormat.F4))
        {
            time = istr_.readInt();
        }
        istr_.endSlice();
    }
}
